import os
import re
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    CallbackQueryHandler,
)
from mistralai.client import MistralClient
from mistralai.models.chat_completion import ChatMessage
import pytube

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
MISTRAL_API_KEY = "1VT63Fiqxn6DwEZXlI5sTGsTSmiNOW5h"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á
TELEGRAM_TOKEN = "7639504664:AAGCjOPO_euHeAknPN3x8llCYFxv65E8RC0"         # –ü–æ–ª—É—á–∏—Ç—å —É @BotFather
BOT_USERNAME = "@minebineldai_bot"       # –ù–∞–ø—Ä–∏–º–µ—Ä: "@my_ai_bot" (—Å @)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
BOT_PERSONALITY = """
–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –≤–µ–∂–ª–∏–≤–æ. 
–ù–µ –ø–∏—à–∏ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ë—É–¥—å –ø–æ–ª–µ–∑–Ω—ã–º –∏ –æ–±—â–∏—Ç–µ–ª—å–Ω—ã–º.
"""

# –°—Å—ã–ª–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /links
CHANNEL_LINK = "https://t.me/minebineld"
GROUP_LINK = "https://t.me/minebineldchat"
BOT_LINK = "https://t.me/minebineldbot"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Mistral
mistral_client = MistralClient(api_key=MISTRAL_API_KEY)

# --- –ö–û–ú–ê–ù–î–´ –ë–û–¢–ê ---
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text("ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ
/help - –ü–æ–º–æ—â—å
/music [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É
/links - –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
"""
    await update.message.reply_text(help_text)

async def send_music(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∏—Å–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –º—É–∑—ã–∫–∏"""
    query = " ".join(context.args)
    if not query:
        await update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞: /music Coldplay - Yellow")
        return

    try:
        await update.message.chat.send_action(action="typing")
        yt = pytube.Search(query).results[0]
        audio_url = yt.streams.filter(only_audio=True).first().url
        await update.message.reply_audio(audio_url, title=yt.title)
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def send_links(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫"""
    links_text = f"""
üîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:
–ö–∞–Ω–∞–ª: {CHANNEL_LINK}
–ì—Ä—É–ø–ø–∞: {GROUP_LINK}
–ë–æ—Ç: {BOT_LINK}
"""
    await update.message.reply_text(links_text)

# --- –û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ---
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message_type = update.message.chat.type
    text = update.message.text or ""

    # –î–ª—è –≥—Ä—É–ø–ø/—Å—É–ø–µ—Ä–≥—Ä—É–ø–ø –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    if message_type in ["group", "supergroup"]:
        if BOT_USERNAME.lower() not in text.lower():
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è
        
        # –£–¥–∞–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
        text = re.sub(rf'@{BOT_USERNAME[1:]}', '', text, flags=re.IGNORECASE).strip()
        if not text:
            return  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —É–ø–æ–º–∏–Ω–∞–Ω–∏—è

    # –î–ª—è –õ–° –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await update.message.chat.send_action(action="typing")
    
    try:
        # –ó–∞–ø—Ä–æ—Å –∫ Mistral API
        response = mistral_client.chat(
            model="mistral-small-latest",
            messages=[ChatMessage(role="user", content=BOT_PERSONALITY + "\n\n" + text)],
        )
        await update.message.reply_text(response.choices[0].message.content)
    except Exception as e:
        await update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

# --- –ó–ê–ü–£–°–ö –ë–û–¢–ê ---
if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    # –ö–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("music", send_music))
    app.add_handler(CommandHandler("links", send_links))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –ó–∞–ø—É—Å–∫
    print("ü§ñ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    app.run_polling()