import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    CallbackQueryHandler,
)
from mistralai.client import MistralClient
from mistralai.models.chat_completion import ChatMessage
import pytube
import requests

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MISTRAL_API_KEY = "1VT63Fiqxn6DwEZXlI5sTGsTSmiNOW5h"
TELEGRAM_TOKEN = "7639504664:AAGCjOPO_euHeAknPN3x8llCYFxv65E8RC0"
BOT_USERNAME = "@minebineldai_bot"  # –ù–∞–ø—Ä–∏–º–µ—Ä, @mistral_gpt_bot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–∏—á–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
BOT_PERSONALITY = """
–¢—ã –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω—ã–π. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ. 
–ù–µ –ø–∏—à–∏ –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ë—É–¥—å –≤–µ–∂–ª–∏–≤—ã–º.
"""

# –ö–ª–∏–µ–Ω—Ç Mistral
mistral_client = MistralClient(api_key=MISTRAL_API_KEY)

# –ö–∞–Ω–∞–ª, –≥—Ä—É–ø–ø–∞ –∏ –¥—Ä—É–≥–æ–π –±–æ—Ç (–ø–æ –∂–µ–ª–∞–Ω–∏—é)
CHANNEL_LINK = "https://t.me/minebineld"
GROUP_LINK = "https://t.me/minebineldchat"
OTHER_BOT_LINK = "https://t.me/minebineldbot"

# ===== –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ===== #
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ù–∞–ø–∏—à–∏ –º–Ω–µ —á—Ç–æ-–Ω–∏–±—É–¥—å!")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message_type = update.message.chat.type  # private –∏–ª–∏ group
    text = update.message.text

    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö
    if message_type == "group" or message_type == "supergroup":
        if BOT_USERNAME.lower() not in text.lower():
            return

    # –£–±–∏—Ä–∞–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ –≥—Ä—É–ø–ø–∞
    if message_type != "private":
        text = text.replace(BOT_USERNAME, "").strip()

    # –°—Ç–∞—Ç—É—Å "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await update.message.chat.send_action(action="typing")

    # –ó–∞–ø—Ä–æ—Å –∫ Mistral API
    response = mistral_client.chat(
        model="mistral-small-latest",
        messages=[ChatMessage(role="user", content=BOT_PERSONALITY + "\n\n" + text)],
    )

    bot_reply = response.choices[0].message.content
    await update.message.reply_text(bot_reply)

async def send_music(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = " ".join(context.args)
    if not query:
        await update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: /music Coldplay - Yellow")
        return

    await update.message.chat.send_action(action="typing")
    
    try:
        yt = pytube.Search(query).results[0]
        audio_url = yt.streams.filter(only_audio=True).first().url
        
        await update.message.reply_audio(audio_url, title=yt.title)
    except Exception as e:
        await update.message.reply_text(f"–û—à–∏–±–∫–∞: {e}")

async def send_links(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [InlineKeyboardButton("üì¢ –ö–∞–Ω–∞–ª", url=CHANNEL_LINK)],
        [InlineKeyboardButton("üí¨ –ì—Ä—É–ø–ø–∞", url=GROUP_LINK)],
        [InlineKeyboardButton("ü§ñ –î—Ä—É–≥–æ–π –±–æ—Ç", url=OTHER_BOT_LINK)],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í–æ—Ç —Å—Å—ã–ª–∫–∏:", reply_markup=reply_markup)

# ===== –ó–ê–ü–£–°–ö –ë–û–¢–ê ===== #
if __name__ == "__main__":
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(CommandHandler("music", send_music))
    app.add_handler(CommandHandler("links", send_links))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()